/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as BrowseImport } from './routes/_browse'
import { Route as AuthImport } from './routes/_auth'
import { Route as BrowseAccountImport } from './routes/_browse/account'
import { Route as BrowseAccountAddressesIndexImport } from './routes/_browse/account/addresses/index'
import { Route as BrowseAccountAddressesNewRouteImport } from './routes/_browse/account/addresses/new/route'
import { Route as BrowseAccountAddressesAddressIdEditImport } from './routes/_browse/account/addresses/$addressId/edit'

// Create Virtual Routes

const BrowseIndexLazyImport = createFileRoute('/_browse/')()
const AuthSignupLazyImport = createFileRoute('/_auth/signup')()
const AuthResetPasswordLazyImport = createFileRoute('/_auth/reset-password')()
const AuthLoginLazyImport = createFileRoute('/_auth/login')()
const AuthForgotPasswordLazyImport = createFileRoute('/_auth/forgot-password')()
const BrowseAccountIndexLazyImport = createFileRoute('/_browse/account/')()

// Create/Update Routes

const BrowseRoute = BrowseImport.update({
  id: '/_browse',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const BrowseIndexLazyRoute = BrowseIndexLazyImport.update({
  path: '/',
  getParentRoute: () => BrowseRoute,
} as any).lazy(() => import('./routes/_browse/index.lazy').then((d) => d.Route))

const AuthSignupLazyRoute = AuthSignupLazyImport.update({
  path: '/signup',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/signup.lazy').then((d) => d.Route))

const AuthResetPasswordLazyRoute = AuthResetPasswordLazyImport.update({
  path: '/reset-password',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/reset-password.lazy').then((d) => d.Route),
)

const AuthLoginLazyRoute = AuthLoginLazyImport.update({
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/login.lazy').then((d) => d.Route))

const AuthForgotPasswordLazyRoute = AuthForgotPasswordLazyImport.update({
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/forgot-password.lazy').then((d) => d.Route),
)

const BrowseAccountRoute = BrowseAccountImport.update({
  path: '/account',
  getParentRoute: () => BrowseRoute,
} as any)

const BrowseAccountIndexLazyRoute = BrowseAccountIndexLazyImport.update({
  path: '/',
  getParentRoute: () => BrowseAccountRoute,
} as any).lazy(() =>
  import('./routes/_browse/account/index.lazy').then((d) => d.Route),
)

const BrowseAccountAddressesIndexRoute =
  BrowseAccountAddressesIndexImport.update({
    path: '/addresses/',
    getParentRoute: () => BrowseAccountRoute,
  } as any).lazy(() =>
    import('./routes/_browse/account/addresses/index.lazy').then(
      (d) => d.Route,
    ),
  )

const BrowseAccountAddressesNewRouteRoute =
  BrowseAccountAddressesNewRouteImport.update({
    path: '/addresses/new',
    getParentRoute: () => BrowseAccountRoute,
  } as any).lazy(() =>
    import('./routes/_browse/account/addresses/new/route.lazy').then(
      (d) => d.Route,
    ),
  )

const BrowseAccountAddressesAddressIdEditRoute =
  BrowseAccountAddressesAddressIdEditImport.update({
    path: '/addresses/$addressId/edit',
    getParentRoute: () => BrowseAccountRoute,
  } as any).lazy(() =>
    import('./routes/_browse/account/addresses/$addressId/edit.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_browse': {
      preLoaderRoute: typeof BrowseImport
      parentRoute: typeof rootRoute
    }
    '/_browse/account': {
      preLoaderRoute: typeof BrowseAccountImport
      parentRoute: typeof BrowseImport
    }
    '/_auth/forgot-password': {
      preLoaderRoute: typeof AuthForgotPasswordLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/login': {
      preLoaderRoute: typeof AuthLoginLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/reset-password': {
      preLoaderRoute: typeof AuthResetPasswordLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/signup': {
      preLoaderRoute: typeof AuthSignupLazyImport
      parentRoute: typeof AuthImport
    }
    '/_browse/': {
      preLoaderRoute: typeof BrowseIndexLazyImport
      parentRoute: typeof BrowseImport
    }
    '/_browse/account/': {
      preLoaderRoute: typeof BrowseAccountIndexLazyImport
      parentRoute: typeof BrowseAccountImport
    }
    '/_browse/account/addresses/new': {
      preLoaderRoute: typeof BrowseAccountAddressesNewRouteImport
      parentRoute: typeof BrowseAccountImport
    }
    '/_browse/account/addresses/': {
      preLoaderRoute: typeof BrowseAccountAddressesIndexImport
      parentRoute: typeof BrowseAccountImport
    }
    '/_browse/account/addresses/$addressId/edit': {
      preLoaderRoute: typeof BrowseAccountAddressesAddressIdEditImport
      parentRoute: typeof BrowseAccountImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  AuthRoute.addChildren([
    AuthForgotPasswordLazyRoute,
    AuthLoginLazyRoute,
    AuthResetPasswordLazyRoute,
    AuthSignupLazyRoute,
  ]),
  BrowseRoute.addChildren([
    BrowseAccountRoute.addChildren([
      BrowseAccountIndexLazyRoute,
      BrowseAccountAddressesNewRouteRoute,
      BrowseAccountAddressesIndexRoute,
      BrowseAccountAddressesAddressIdEditRoute,
    ]),
    BrowseIndexLazyRoute,
  ]),
])

/* prettier-ignore-end */
